name: Continous Integration with Github Actions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [auth-service, credor-service, devedor-service, emprestimo-service, proposta-service]

    steps:
      # 1. Checkout do código
      - uses: actions/checkout@v4

      # 2. Login no Docker Hub
      - name: Login to Docker hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Configuração do JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      # 4. Tornar o mvnw executável
      - name: Set execute permissions for mvnw in ${{ matrix.service }}
        working-directory: ./services/${{ matrix.service }}
        run: chmod +x ./mvnw

      # 5. Build do projeto usando o Maven Wrapper
      - name: Build ${{ matrix.service }}
        working-directory: ./services/${{ matrix.service }}
        run: ./mvnw clean package

      # 6. Build das imagens Docker com Docker Compose
      - name: Docker Compose Build ${{ matrix.service }}
        working-directory: ./services/${{ matrix.service }}
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .

      # 7. Push das imagens Docker para o Docker Hub
      - name: Push Docker Image ${{ matrix.service }}
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.run_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.run_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest